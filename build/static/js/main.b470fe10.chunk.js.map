{"version":3,"sources":["components/Employee.js","components/Navbar.js","App.js","index.js"],"names":["Employee","state","search","filteredEmployees","handleChange","event","preventDefault","setState","target","value","console","log","employee","employees","filter","item","name","includes","sort","a","b","toUpperCase","onSubmit","this","className","onChange","type","placeholder","scope","map","id","title","email","phone","Component","Navbar","href","App","ReactDOM","render","document","getElementById"],"mappings":"4iEA6FeA,E,4MAxFbC,MAAQ,CACNC,OAAQ,GACRC,kBAAmB,I,EAGrBC,aAAe,SAACC,GACdA,EAAMC,iBACN,EAAKC,SAAS,CACZL,OAAQG,EAAMG,OAAOC,QAEvBC,QAAQC,IAAI,gCAAiC,EAAKV,MAAMC,QACxD,EAAKC,qB,EAGPA,kBAAoB,WAClB,IAAMS,EAAW,EAAKX,MAAMC,OAC5BQ,QAAQC,IAAI,6BAA8B,EAAKV,MAAMC,QACrD,IAAMC,EAAoBU,EACvBC,QAAO,SAACC,GAEP,OADAL,QAAQC,IAAI,QAASI,EAAKC,MACnBD,EAAKC,KAAKC,SAASL,MAE3BM,MAAK,SAACC,EAAGC,GACR,OAAOD,EAAEH,KAAKK,cAAgBD,EAAEJ,KAAKK,eAAiB,EAAI,KAE9DX,QAAQC,IAAIR,GAEZ,EAAKI,SAAS,CACZJ,uB,uDAKF,OACE,6BACE,0BAAMmB,SAAUC,KAAKD,SAAUE,UAAU,cACvC,6BACE,mDACwB,KACtB,2BACEtB,OAAQqB,KAAKtB,MAAMC,OACnBuB,SAAUF,KAAKnB,aACfsB,KAAK,QACLC,YAAY,0BAOpB,2BAAOH,UAAU,SACf,2BAAOA,UAAU,eACf,4BACE,wBAAII,MAAM,OAAV,MACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,WAGJ,+BAEIL,KAAKtB,MAAMC,OAUTqB,KAAKtB,MAAME,kBAAkB0B,KAAI,SAACd,GAAD,OAC/B,4BACE,wBAAIa,MAAM,OAAOb,EAAKe,IACtB,4BAAKf,EAAKC,MACV,4BAAKD,EAAKgB,OACV,4BAAKhB,EAAKiB,OACV,4BAAKjB,EAAKkB,WAfdpB,EAAUgB,KAAI,SAACd,GAAD,OACZ,4BACE,wBAAIa,MAAM,OAAOb,EAAKe,IACtB,4BAAKf,EAAKC,MACV,4BAAKD,EAAKgB,OACV,4BAAKhB,EAAKiB,OACV,4BAAKjB,EAAKkB,kB,GAtEPC,a,MCONC,MARjB,WACI,OACE,yBAAKX,UAAU,UACb,uBAAGY,KAAK,KAAR,wBCSOC,MATf,WACE,OACE,yBAAKb,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAUX,UAAWA,MCN3ByB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b470fe10.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../styles/Employee.css\";\nimport employees from \"../employees.json\";\n\nclass Employee extends Component {\n  state = {\n    search: \"\",\n    filteredEmployees: [],\n  };\n\n  handleChange = (event) => {\n    event.preventDefault();\n    this.setState({\n      search: event.target.value,\n    });\n    console.log(\"I am in the HandleInputChange\", this.state.search);\n    this.filteredEmployees();\n  };\n\n  filteredEmployees = () => {\n    const employee = this.state.search;\n    console.log(\"What is this.state.search:\", this.state.search);\n    const filteredEmployees = employees\n      .filter((item) => {\n        console.log(\"Item:\", item.name);\n        return item.name.includes(employee);\n      })\n      .sort((a, b) => {\n        return a.name.toUpperCase() < b.name.toUpperCase() ? -1 : 1;\n      });\n    console.log(filteredEmployees);\n    //filter method: loop through array and for each item (employee), checks and return that item(employee) match parameter\n    this.setState({\n      filteredEmployees,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.onSubmit} className=\"searchForm\">\n          <row>\n            <p>\n              Search for employee: {\"  \"}\n              <input\n                search={this.state.search}\n                onChange={this.handleChange}\n                type=\"input\"\n                placeholder=\"  Name of employee\"\n              />\n            </p>\n          </row>\n        </form>\n\n        {/* Table header for all the employees */}\n        <table className=\"table\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th scope=\"col\">Id</th>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Title</th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Phone</th>\n            </tr>\n          </thead>\n          <tbody>\n            {/* filter or map employee depending on search */}\n            {!this.state.search\n              ? employees.map((item) => (\n                  <tr>\n                    <th scope=\"row\">{item.id}</th>\n                    <td>{item.name}</td>\n                    <td>{item.title}</td>\n                    <td>{item.email}</td>\n                    <td>{item.phone}</td>\n                  </tr>\n                ))\n              : this.state.filteredEmployees.map((item) => (\n                  <tr>\n                    <th scope=\"row\">{item.id}</th>\n                    <td>{item.name}</td>\n                    <td>{item.title}</td>\n                    <td>{item.email}</td>\n                    <td>{item.phone}</td>\n                  </tr>\n                ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Employee;\n","import React from \"react\";\nimport \"../styles/Navbar.css\";\n\nfunction Navbar() {\n    return (\n      <nav className=\"navbar\">\n        <a href=\"/\">Employee Directory</a>\n      </nav>\n    );\n  }\n  \n  export default Navbar;","import React from 'react';\nimport Employee from \"./components/Employee\";\nimport Navbar from \"./components/Navbar\";\nimport employees from \"./employees.json\";\n\n\nfunction App () {\n  return (\n    <div className=\"container\">\n      <Navbar />\n      <Employee employees={employees} />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}